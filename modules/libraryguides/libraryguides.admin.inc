<?php
// $Id:  $

/**
 * @file
 * Administrative page callbacks for the libraryguides module.
 */

/**
 * Generates the settings form for the libraryguides module.
 *
 * @param $op
 *   Default value is NULL;
 * @return
 *   The output, which contains the HTML code for the settings form generated by
 *   drupal_get_form() function.
 */
function libraryguides_settings_page($op = NULL) {
   $output .= '<p>Add a new category or delete one of the existing categories below.</p>';
   $output = drupal_get_form('libraryguides_settings_form');
   // get existing categories
   $output .= '<br />';
   $output .= '<h2 style="border-top: 2px solid #ccc; border-bottom: 2px solid #ccc;">Categories</h2>';
   $output .= get_libraryguides_categories_html();
   return $output;
}

function libraryguides_category_edit($op = NULL) {
   $output .= '<p>Edit Category.</p>';
   $output = drupal_get_form('libraryguides_settings_edit_form');

   // get existing categories
   $output .= '<br />';
   $output .= '<h2 style="border-top: 2px solid #ccc; border-bottom: 2px solid #ccc;">Categories</h2>';
   $output .= get_libraryguides_categories_html();
   return $output;
}

function libraryguides_category_delete($op = NULL) {
   $output .= '<p>Confirm Delete Category.</p>';
   $output = drupal_get_form('libraryguides_settings_form');
   // get existing categories
   $output .= '<br />';
   $output .= '<h2 style="border-top: 2px solid #ccc; border-bottom: 2px solid #ccc;">Categories</h2>';
   $output .= get_libraryguides_categories_html();
   return $output;
}

/**
 * Define a form to provide a category and url
 *
 * @return
 *   The general settings form code stored in the $form variable, before
 *   converted to HTML.
 */
function libraryguides_settings_form() {
  drupal_add_js(drupal_get_path('module', 'libraryguides') .'/libraryguides-admin.js', 'module');
  drupal_add_js('if (Drupal.jsEnabled) { hideUrl(); }','inline','footer');
  drupal_add_js('if (Drupal.jsEnabled) { hideOtherUrl(); }','inline','footer');
  $form['name'] = array(
    '#type' => 'textfield',
    '#title' => t('Category'),
    '#size' => 60,
    '#maxlength' => 255,
    '#default_value' => ''
  );
  $form['haslibguide'] = array(
    '#type' => 'checkbox',
    '#title' => t('Category has libraryguides available'),
    '#default_value' => variable_get('haslibguide', FALSE),
    '#description' => t('Select if this category has libraryguides available.')
  );

  $form['hassubjguide'] = array(
    '#type' => 'checkbox',
    '#title' => t('Category has Non-libraryguides available'),
    '#default_value' => variable_get('hassubjguide', FALSE),
    '#description' => t('Select if this category has non-libraryguides available.'),
    '#attributes' => array('onClick' => 'toggleOtherUrl();' )
  );
  $form['url'] = array(
    '#type' => 'textfield',
    '#title' => t('libraryguides Url'),
    '#default_value' => '',
    '#size' => 100,
    '#maxlength' => 255
  );

  $form['otherurl'] = array(
    '#type' => 'textfield',
    '#title' => t('Non libraryguides url'),
    '#default_value' => '',
    '#size' => 100,
    '#maxlength' => 255
  );

  $form['update'] = array(
    '#type' => 'submit',
    '#value' => t('Save Category'),
    '#weight' => 3,
    '#submit' => array('libraryguides_settings_form_submit'),
  );

  return $form;
}

function libraryguides_settings_form_validate($form, &$form_state) {
   if ($form_state['values']['name'] == '') {
      form_set_error('name', t('You must provide a category'));
   }
}



/**
 * Function saves the options set by the user in the FAQ Settings - General tab.
 *
 * @param $form
 *   Array, containing the form structure.
 * @param &$form_state
 *   $form_state['values'] stores the submitted values from the form.
 */
function libraryguides_settings_form_submit($form, &$form_state) {
  $libraryguides_base_path = LIBRARYGUIDES_BASEPATH;

  if ($form_state['values']['op'] == t('Save Category')) {
     //if ($form_state['values']['haslibguide'] == '1' ) {
        $name = $form_state['values']['name'];
        // replace spaces with underscores, squeeze out commas
        $category = str_replace(' ','_',$name);
        $category = str_replace(',','',$category);
        $form_state['values']['url'] = '/' . $libraryguides_base_path . '/' . $category;
     //}

     //drupal_set_message("url: " . $form_state['values']['url']);
     $result = db_query("INSERT INTO {libraryguides_categories} (cid, name, haslibguide, hassubjguide, url, otherurl) VALUES('%d', '%s', '%d' , '%d' ,'%s', '%s')",
        NULL,
        $form_state['values']['name'],
        $form_state['values']['haslibguide'],
        $form_state['values']['hassubjguide'],
        $form_state['values']['url'],
        $form_state['values']['otherurl']);
     drupal_set_message(t('Category has been added.'));
  }
}

/**
 * Define a form to edit a category
 *
 * @return
 *   The general settings form code stored in the $form variable, before
 *   converted to HTML.
 */
function libraryguides_settings_edit_form() {
  drupal_add_js(drupal_get_path('module', 'libraryguides') .'/libraryguides-admin.js', 'module');
  drupal_add_js('if (Drupal.jsEnabled) { showUrl(); }','inline','footer');
  drupal_add_js('if (Drupal.jsEnabled) { showOtherUrl(); }','inline','footer');
  $cid = arg(4);
  $category = get_libraryguides_category($cid);


  $form = array();
  $form['cid'] = array(
    '#type' => 'hidden',
    '#value' => $category->cid
  );

  $form['name'] = array(
    '#type' => 'textfield',
    '#title' => t('Category'),
    '#size' => 60,
    '#maxlength' => 255,
    '#default_value' => $category->name
  );
  $form['haslibguide'] = array(
    '#type' => 'checkbox',
    '#title' => t('Category has libraryguides available'),
    '#default_value' => $category->haslibguide,
    '#description' => t('Select if this category has libraryguides available.'),
    '#attributes' => array('onClick' => 'toggleUrl();' )
  );


  $form['hassubjguide'] = array(
    '#type' => 'checkbox',
    '#title' => t('Category has Non-Libguides available'),
    '#default_value' => $category->hassubjguide,
    '#description' => t('Select if this category has non-libraryguides available.'),
    '#attributes' => array('onClick' => 'toggleOtherUrl();' )
  );

  $form['url'] = array(
    '#type' => 'textfield',
    '#title' => t('url'),
    '#default_value' => $category->url,
    '#size' => 100,
    '#maxlength' => 255
  );

  $form['otherurl'] = array(
    '#type' => 'textfield',
    '#title' => t('Non libraryguides url'),
    '#default_value' => $category->otherurl,
    '#size' => 100,
    '#maxlength' => 255
  );

  $form['update'] = array(
    '#type' => 'submit',
    '#value' => t('Update Category'),
    '#weight' => 3,
    '#submit' => array('libraryguides_settings_edit_form_submit'),
  );

  return $form;
}

/**
 * Function saves the options set by the user in the FAQ Settings - General tab.
 *
 * @param $form
 *   Array, containing the form structure.
 * @param &$form_state
 *   $form_state['values'] stores the submitted values from the form.
 */
function libraryguides_settings_edit_form_submit($form, &$form_state) {

  if ($form_state['values']['op'] == t('Update Category')) {

     //drupal_set_message("Updating url: " . $form_state['values']['url']);
     $result = db_query("UPDATE {libraryguides_categories} SET name='%s', haslibguide='%d', hassubjguide='%d', url='%s', otherurl='%s' WHERE cid=%d",
        $form_state['values']['name'],
        $form_state['values']['haslibguide'],
        $form_state['values']['hassubjguide'],
        $form_state['values']['url'],
        $form_state['values']['otherurl'],
        $form_state['values']['cid']
        );
     drupal_set_message(t('Category has been updated.'));
  }
}

function get_libraryguides_categories_html() {
  $out = '';
  $result = db_query('SELECT * from {libraryguides_categories} ORDER BY name');
  $out .= '<table cellpadding="3" cellspacing="0" border="1" width="98%">';
  //$out .= '<tr><th width="80%" align="left">Category</th><th width="10%">&nbsp;</th><th width="10%">&nbsp;</th></tr>';

   while ($r = db_fetch_object($result)) {
     $out .= '<tr>';
      $out .= '<td width="80%">' . $r->name . ' </td>';

      $out .= '<td width="10%"><a href="/admin/settings/libraryguides/edit/' . $r->cid .' ">Edit</a></td>';
      // $out .= '<td width="10%"><a href="/admin/settings/libraryguides/delete/' . $r->cid .' ">Delete</a></td>';
      $out .= '</tr>';
   }
   $out .= '</table>';
   return $out;
}

function get_libraryguides_category($cid) {
   $result = db_query('SELECT * FROM {libraryguides_categories} WHERE cid=' . $cid);
   $category = db_fetch_object($result);
   return $category;
}


